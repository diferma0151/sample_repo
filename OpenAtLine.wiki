TortoiseHg 2.0 adds variable expansion to tortoisehg.editor to allow you to open source files to particular lines.  This is particularly useful when searching repository history.

In general, the syntax is:
{{{
[tortoisehg]
editor = myeditor -flags [$FILE --num=$LINENUM] [--highlight "$SEARCH"] -moreflags
}}}

$LINENUM and $SEARCH are key-phrases.  If you specify them in a bracketed section and those parameters are not passed to the editor, the entire bracketed phrase is removed from the command line.

$FILE is optional.  If it is not expanded in any phrase, the filename will be appended at the end of the command line.

More specific examples:

=== Here are 3 examples of editors tested on Windows 7 Professional. ===

* For Scite (the Scintilla example editor) (tested with v2.11) (free, open source) :
{{{
[tortoisehg]
editor = <path\to\>Scite_2.11.exe ["-open:$FILE" -goto:$LINENUM]["-find:$SEARCH"]
}}}
The quotes are mandatory, as I experienced. Scite is also available on Linux.

* For NotePad++ (tested with v5.6.8) (free, open source, gpl) :
{{{
[tortoisehg]
editor = <path\to\>Notepad++.exe [$FILE -n$LINENUM] -multiInst
}}}
I experienced the '-multiInst' option as case-sensitive.

* For TextPad (tested with v5.3.1) (shareware) :
{{{
[tortoisehg]
editor = <path\to\>TextPad.exe [$FILE($LINENUM)]
}}}

=== "The Big Two" on Unix ===

{{{
[tortoisehg]
editor = gvim -f [-c':set hls' -c'/$SEARCH/'] [+$LINENUM $FILE]

[tortoisehg]
editor = emacs [+$LINENUM $FILE] [--eval '(highlight-regexp "$SEARCH")']
}}}

Scite also runs on Linux
{{{
[tortoisehg]
editor = scite [-open:$FILE -goto:$LINENUM]["-find:$SEARCH"]
}}}

=== OS X Editors ===

{{{
# TextWrangler
[tortoisehg]
editor = edit [+$LINENUM --wait $FILE]

# TextMate
[tortoisehg]
editor = mate --wait [--line $LINENUM $FILE]
}}}
