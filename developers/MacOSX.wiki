== TortoiseHg on Mac OS X ==

<<toc>>

**Note:** tortoisehg is now available in [[http://www.finkproject.org/|fink]]'s unstable tree, as tortoisehg-py27 (or 25 or 26 if you are using an older python for some reason).

**Note:** A way via MacPorts is described at the end.

**Note:** Also if you already use Homebrew there are steps at the end. These steps have been confirmed to work with TortoiseHg 2.1.1. They also create an app for your ##Applications## folder.

=== Dependencies: PyQt and QScintilla ===

==== 0. Install Apple Development Tools (Xcode) ====

http://developer.apple.com/technologies/tools/

==== 1. Install Qt4 (Qt SDK for Mac) ====

http://qt.nokia.com/downloads

For Snow Leopard (10.6) users: python2.6 is now run on 64-bit environment by default. Please install 64-bit Qt binary, "Cocoa: Mac binary package for Mac OS X 10.5 - 10.6 (32-bit and 64-bit)".

Do not install Qt version 4.7.1 or 4.7.2. These versions generate crashes in some cases.

Note: Qt 4.7.0 does not crash but you will not be able to use keyboard shortcuts corresponding to contextual menu items. This version could be found on [[ftp://ftp.qt.nokia.com/qt/source/qt-mac-opensource-4.7.0.dmg]] with all other versions.
 
==== 2. Install QScintilla (from source) ====

http://www.riverbankcomputing.co.uk/software/qscintilla/download

{{{
~/Downloads/QScintilla-gpl-2.4.3
$ cd Qt4
$ qmake -spec macx-g++
$ make
$ sudo make install
}}}

installed files:
* /usr/include/Qsci
* /Developer/Applications/Qt/translations/qscintilla_*
* /usr/local/Qt4.6/qsci
* /Library/Frameworks/libqscintilla*

(Optionally) install Qt Designer plugin:

{{{
~/Downloads/QScintilla-gpl-2.4.3
$ cd designer-Qt4
$ qmake -spec macx-g++
$ make
$ sudo make install
}}}

installed files:
* /Developer/Applications/Qt/plugins/designer/libqscintillaplugin.dylib

==== 3. Install Sip (from source) ====

http://www.riverbankcomputing.co.uk/software/sip/download

{{{
~/Downloads/sip-4.10.2
$ python configure.py
$ make
$ sudo make install
}}}

For Snow Leopard (10.6) users: If you installed 32-bit Qt, append {{{-n --arch i386}}} to {{{configure.py}}}. See http://old.nabble.com/PyQt4,-Qt-on-osx-SnowLeopard-td26394590.html

installed files:
* /System/Library/Frameworks/Python.framework/Versions/2.6/bin/sip
* /Library/Python/2.6/site-packages/sip.so
* /System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6/sip.h
* /Library/Python/2.6/site-packages/sipconfig.py
* /Library/Python/2.6/site-packages/sipdistutils.py

==== 4. Install PyQt (from source) ====

http://www.riverbankcomputing.co.uk/software/pyqt/download

{{{
~/Downloads/PyQt-mac-gpl-4.7.3
$ python configure.py
$ make
$ sudo make install
}}}

installed files:
* /Library/Python/2.6/site-packages/PyQt4
* /System/Library/Frameworks/Python.framework/Versions/2.6/share/sip/PyQt4
* /System/Library/Frameworks/Python.framework/Versions/2.6/bin/pyuic4
* /System/Library/Frameworks/Python.framework/Versions/2.6/bin/pylupdate4
* /System/Library/Frameworks/Python.framework/Versions/2.6/bin/pyrcc4
* /usr/local/Qt4.6/qsci/api/python/PyQt4.api

You may need to add /System/Library/Frameworks/Python.framework/Versions/2.6/bin to PATH; or create symlink to them:

{{{
/usr/local/bin
$ for name in pyuic4 pylupdate4 pyrcc4; do sudo ln -s ../../../System/Library/Frameworks/Python.framework/Versions/2.6/bin/$name; done
}}}

Also, PyQt4 will install versions of pyuic4 for both Python 2 and Python 3, and py2app will find the wrong version when both are present.  To work around this problem, simply delete the /Library/Python/2.6/site-packages/PyQt4/uic/port_v3 directory.  If you see an error in proxy_base.py when attempting to build, you most likely did not delete the port_v3 directory.

==== 5. Install Python binding for QScintilla ====

{{{
~/Downloads/QScintilla-gpl-2.4.3
$ cd Python
$ python configure.py
$ make
$ sudo make install
}}}

installed files:
* /System/Library/Frameworks/Python.framework/Versions/2.6/share/sip/PyQt4/Qsci
* /usr/local/Qt4.6/qsci/api/python/QScintilla2.api

==== 6. Test installation ====

{{{
# Only for Snow Leopard (10.6) users who installed 32bit Qt:
$ export VERSIONER_PYTHON_PREFER_32_BIT=yes

$ python
Python 2.6.1 (r261:67515, Feb 11 2010, 00:51:29) 
[GCC 4.2.1 (Apple Inc. build 5646)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from PyQt4.QtGui import *
>>> app = QApplication([])
>>> w = QDialog()
>>> w.show()
>>> app.exec_()
}}}

=== Optional Dependencies ===

* Install iniparse - allows thg to modify your configuration files
* install pygments - enables auto-completion of source in commit tool

=== Get Latest Mercurial and TortoiseHg ===

{{{
~/Documents 
$ hg clone http://selenic.com/repo/hg mercurial
$ hg clone http://bitbucket.org/tortoisehg/thg/
$ cd mercurial
$ make local
}}}

Add {{{~/Documents/mercurial}}} to PYTHONPATH, or symlink to them:
{{{
~/Documents/thg
$ ln -s ../mercurial/mercurial
$ ln -s ../mercurial/hgext
}}}

Run it:
{{{
# Only for Snow Leopard (10.6) users who installed 32bit Qt:
$ export VERSIONER_PYTHON_PREFER_32_BIT=yes

$ thg log
}}}

Happy Hacking!

=== Alternative: Install via MacPorts ===
**Warning:** Installing TortoiseHg this way usually takes //a couple of hours// because Qt is compiled from its sources.

* Install XCode (Version 3.x is free and works)

* Install Java Developer Package Update 4 (https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=20719)

* Install MacPorts (http://www.macports.org/install.php)

* Install Python and PyQt from ports:

{{{
$ sudo port install python27 python_select
# Make this the default version
# Old version: $ sudo python_select python27
# New version:
$ sudo port select python python27

$ sudo port install py27-pyqt4 py27-qscintilla
}}}

* Set " /opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin" to your Path (edit //~/.bash_profile//)


* Install pip (if not present)

{{{
$ curl -O http://python-distribute.org/distribute_setup.py
$ sudo python distribute_setup.py
$ sudo easy_install pip
}}}

* Install the easy_installable thg fork

{{{
$ sudo pip install thg-mac
}}}

=== Alternative: Install via Homebrew ===
**Warning:** Installing TortoiseHg this way usually takes //a couple of hours// because Qt is compiled from its sources. This may no longer be true, when [[https://github.com/mxcl/homebrew/issues/6417|Homebrew ticket #6417]] is fixed.

* Install [[http://developer.apple.com/xcode/|XCode]] (Version 3.2.6 is free and works)

* Install [[http://mxcl.github.com/homebrew/|Homebrew]] - https://github.com/mxcl/homebrew/wiki/installation

 * Add Homebrew's paths to ##$PATH## and ##$PYTHONPATH##:

{{{
#!sh
# Edit ~/.bash_profile or ~/.bashrc
# Add these lines (or adjust them)
BREW_PREFIX=`brew --prefix`
export PATH=$BREW_PREFIX/share/python:$BREW_PREFIX/bin/:$BREW_PREFIX/sbin:$PATH
export PYTHONPATH=$BREW_PREFIX/lib/python:$PYTHONPATH
}}}

* Install PyQt via homebrew (this also installs qt and sip):

{{{
$ sudo brew install pyqt
}}}

**Note:** This may take an hour or two to compile.

* Install QScintilla via homebrew. Note: Until [[https://github.com/mxcl/homebrew/issues/6431|ticket #6431]] is implemented, you need to create the Homebrew Formula yourself. Here is the formular (##qscintilla.rb##):

{{{
#!ruby
require 'formula'

class Qscintilla < Formula
  url 'http://www.riverbankcomputing.co.uk/static/Downloads/QScintilla2/QScintilla-gpl-2.5.1.tar.gz'
  homepage 'http://www.riverbankcomputing.co.uk/software/qscintilla/intro'
  md5 'dd7edef5ff674d307057a3c12dbd8fce'

  depends_on 'pyqt'
  depends_on 'sip'

  def install
    ENV.prepend 'PYTHONPATH', "#{HOMEBREW_PREFIX}/lib/python", ':'

    Dir.chdir 'Qt4'

    inreplace 'qscintilla.pro' do |s|
      s.gsub! '$$[QT_INSTALL_LIBS]', lib
      s.gsub! "$$[QT_INSTALL_HEADERS]", include
      s.gsub! "$$[QT_INSTALL_TRANSLATIONS]", "#{prefix}/trans"
      s.gsub! "$$[QT_INSTALL_DATA]", "#{prefix}/data"
    end

    system "qmake", "qscintilla.pro"
    system "make"
    system "make", "install"

    Dir.chdir '../Python'

    system 'python', 'configure.py', "-o", lib, "-n", include, "--apidir=#{prefix}/qsci", "--destdir=#{lib}/python/PyQt4", "--sipdir=#{share}/sip"
    system 'make'
    system 'make', 'install'
  end
  
  def caveats; <<-EOS
This formula won't function until you amend your PYTHONPATH like so:
    export PYTHONPATH=#{HOMEBREW_PREFIX}/lib/python:$PYTHONPATH
EOS
  end
end
}}}

Place this file in your Formula directory:

{{{
$ sudo cp qscintilla.rb `brew --prefix`/Library/Formula/
}}}

Now install QScintilla:

{{{
$ sudo brew install qscintilla
}}}

* Install required Python packages:
{{{
$ sudo easy_install pip
$ sudo pip install Pygments
$ sudo pip install iniparse
}}}

* Install Mercurial:
{{{
$ sudo pip install Mercurial
}}}

* Checkout TortoiseHg (using Mercurial):
{{{
$ hg clone http://bitbucket.org/tortoisehg/thg/ ~/Documents/TortoiseHg
}}}

Now you should be able to start TortoiseHg:
{{{
$ cd ~/Documents/TortoiseHg
$ ./thg log
}}}

The next steps create a "wrapper application" for your Mac OS X applications folder. You can download the necessary files here: http://manski.net/files/TortoiseHg.zip (Alternatively you can follow the instructions [[http://sixohthree.com/1314/shell-scripts-as-applications-in-mac-os-x|here]].)

The zip file contains just the wrapper app. If you've checked out TortoiseHg to ##~/Documents/TortoiseHg##, this app should work out of the box. Otherwise you need to edit the file ##Content/MacOS/run.sh## inside the application bundle. To do this, just right click the app and click "Show Package Contents".